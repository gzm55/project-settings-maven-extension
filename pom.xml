<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://mav en.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.github.gzm55.maven</groupId>
  <artifactId>project-settings-extension</artifactId>
  <version>0.3.5</version>

  <name>Extension for Loading project specific settings.xml</name>
  <description>This extension could load .mvn/settings.xml
  as project settings, and merge it into effective setting.</description>
  <url>https://github.com/gzm55/project-settings-maven-extension</url>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>James Z.M. Gao</name>
      <email>gaozm55@gmail.com</email>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/gzm55/project-settings-maven-extension.git</connection>
    <developerConnection>scm:git:git@github.com:gzm55/project-settings-maven-extension.git</developerConnection>
    <tag>project-settings-extension-0.3.5</tag>
    <url>https://github.com/gzm55/project-settings-maven-extension/tree/master</url>
  </scm>

  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/gzm55/project-settings-maven-extension/issues</url>
  </issueManagement>

  <distributionManagement>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- support Java 7 + maven [3.3.1, 5.0) in runtime -->
    <project.runtime-jdk.min-version>7</project.runtime-jdk.min-version>
    <project.runtime-maven.min-version>3.3.1</project.runtime-maven.min-version>

    <!-- requirement for build this extension -->
    <project.buildtime-jdk.min-version>9</project.buildtime-jdk.min-version>
    <project.buildtime-maven.min-version>3.5.3</project.buildtime-maven.min-version>

    <!-- junit 5 versions -->
    <junit.jupiter.version>5.9.2</junit.jupiter.version>

    <maven.compiler.release>${project.runtime-jdk.min-version}</maven.compiler.release>
    <!-- use native release for testing codes -->
    <maven.compiler.testRelease>${java.version.majorVersion}</maven.compiler.testRelease>
  </properties>

  <dependencies>
    <!-- Uses only components provided by maven distro. -->
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <version>[${project.runtime-maven.min-version},3.99)</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-embedder</artifactId>
      <version>[${project.runtime-maven.min-version},3.99)</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-compat</artifactId>
      <version>[${project.runtime-maven.min-version},3.99)</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>1.7.30</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>verify</defaultGoal>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.10.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.4.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>4.0.0-M4</version>
        </plugin>
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.2.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-wrapper-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[${project.buildtime-maven.min-version},3.99)</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>[${project.buildtime-jdk.min-version},)</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>parse-java-version</id>
            <goals>
              <goal>parse-version</goal>
            </goals>
            <configuration>
              <versionString>${java.version}</versionString>
              <propertyPrefix>java.version</propertyPrefix>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M8</version>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <!-- workaround for https://issues.apache.org/jira/browse/MINVOKER-117 -->
            <id>filter-it-xml</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <outputDirectory>${project.build.directory}/its/remote-parent/.mvn</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/src/it/remote-parent/resource</directory>
                  <includes>
                    <include>settings.xml</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-invoker-plugin</artifactId>
        <version>3.6.0</version>
        <configuration>
          <localRepositoryPath>${project.build.directory}/it-repo</localRepositoryPath>
          <settingsFile>${project.basedir}/src/it/settings.xml</settingsFile>
          <cloneProjectsTo>${project.build.directory}/its</cloneProjectsTo>
          <!-- workaround MINVOKER-117, not cleanup the filtered files -->
          <cloneClean>false</cloneClean>
        </configuration>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>install</goal>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>1.3.0</version>
        <configuration>
          <flattenMode>ossrh</flattenMode>
        </configuration>
        <executions>
          <execution>
            <id>flatten</id>
            <goals>
              <goal>flatten</goal>
            </goals>
            <phase>prepare-package</phase>
          </execution>
          <execution>
            <id>flatten.clean</id>
            <goals>
              <goal>clean</goal>
            </goals>
            <phase>clean</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>1.6.13</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
          <autoReleaseAfterClose>true</autoReleaseAfterClose>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>2.31.0</version>
        <configuration>
          <java>
            <googleJavaFormat>
              <!-- https://github.com/google/google-java-format/releases -->
              <version>1.15.0</version>
              <style>GOOGLE</style>
            </googleJavaFormat>
          </java>
          <pom>
            <sortPom>
              <expandEmptyElements>false</expandEmptyElements>
              <!-- https://issues.apache.org/jira/browse/MRELEASE-1111 -->
              <spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>
            </sortPom>
          </pom>
          <yaml>
            <includes>
              <include>.github/**/*.yaml</include>
              <include>.github/**/*.yml</include>
            </includes>
          </yaml>
          <upToDateChecking>
            <enabled>true</enabled>
          </upToDateChecking>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>release-profile</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>

      <build>
        <plugins>
          <plugin>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>gpg-2.1-profile</id>
      <activation>
        <property>
          <name>!env.OLD_GPG</name>
        </property>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <artifactId>maven-gpg-plugin</artifactId>
              <configuration>
                <gpgArguments>
                  <arg>--pinentry-mode</arg>
                  <arg>loopback</arg>
                </gpgArguments>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
</project>
